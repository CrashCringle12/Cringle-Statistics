/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import lombok.Data;
import lombok.EqualsAndHashCode;
/**
 *
 * @author Lamar Cooley
 */
public class MainFrame extends JFrame {

    /**
     * Creates new form testJFrame
     */
    // Variables declaration - do not modify                     
    private JLabel Air;
    private JLabel Notes;
    private JLabel songName;
    private JLabel avoidmine;
    private JPanel banner;
    private JPanel bg;
    private JLabel chaos;
    private JLabel cpHit;
    private JLabel cpMiss;
    private JLabel decents;
    private JLabel difficulty;
    private JLabel excellent;
    private JLabel fakes;
    private JLabel fantastic;
    private JLabel freeze;
    private JLabel great;
    private JLabel hands;
    private JLabel hitmine;
    private JLabel holds;
    private JLabel jLabel1;
    private JLabel jLabel10;
    private JLabel jLabel2;
    private JLabel jLabel21;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JLabel jLabel9;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JPanel jPanel3;
    private JPanel jPanel4;
    private JScrollPane jScrollPane1;
    private JSeparator jSeparator1;
    private JSeparator jSeparator2;
    private JSeparator jSeparator3;
    private JTable jTable1;
    private JLabel jumps;
    private JLabel lifts;
    private JLabel miss;
    private JLabel rolls;
    private JTextField searchField;
    private JPanel sidepane;
    private JLabel stream;
    private JLabel taphold;
    private JLabel timesPlayed;
    private JLabel titleP;
    private JLabel totalTimesPlayed;
    private JLabel voltage;
    private JLabel wayoff;
    // End of variables declaration                   
    private List<String[]> songList;
    public MainFrame() {
        //createTable(songList);
        //initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        setjPanel4(new JPanel());
        setBg(new JPanel());
        setSidepane(new JPanel());
        setjPanel1(new JPanel());
        setjLabel3(new JLabel());
        setSongName(new JLabel());
        setjSeparator1(new JSeparator());
        setjLabel1(new JLabel());
        setjPanel2(new JPanel());
        setjLabel5(new JLabel());
        setjSeparator2(new JSeparator());
        setjLabel6(new JLabel());
        setFakes(new JLabel());
        setHolds(new JLabel());
        setJumps(new JLabel());
        setLifts(new JLabel());
        setRolls(new JLabel());
        setHands(new JLabel());
        setTaphold(new JLabel());
        setVoltage(new JLabel());
        setStream(new JLabel());
        setFreeze(new JLabel());
        setAir(new JLabel());
        setChaos(new JLabel());
        setNotes(new JLabel());
        setjLabel21(new JLabel());
        setHitmine(new JLabel());
        setMiss(new JLabel());
        setFantastic(new JLabel());
        setExcellent(new JLabel());
        setGreat(new JLabel());
        setDecents(new JLabel());
        setWayoff(new JLabel());
        setCpHit(new JLabel());
        setCpMiss(new JLabel());
        setAvoidmine(new JLabel());
        setTitleP(new JLabel());
        setDifficulty(new JLabel());
        setTimesPlayed(new JLabel());
        setTotalTimesPlayed(new JLabel());
        setjLabel7(new JLabel());
        setjSeparator3(new JSeparator());
        setjPanel3(new JPanel());
        setjLabel4(new JLabel());
        setBanner(new JPanel());
        setSearchField(new JTextField());
        setjLabel2(new JLabel());
        setjScrollPane1(new JScrollPane());
        setjTable1(new JTable());
        setjLabel9(new JLabel());
        setjLabel8(new JLabel());
        setjLabel10(new JLabel());

        GroupLayout jPanel4Layout = new GroupLayout(getjPanel4());
        getjPanel4().setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        getBg().setBackground(new java.awt.Color(22, 22, 22));

        getSidepane().setBackground(new java.awt.Color(255, 51, 51));

        getjPanel1().setBackground(new java.awt.Color(204, 0, 51));

        getjLabel3().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getjLabel3().setForeground(new java.awt.Color(255, 255, 255));
        getjLabel3().setText("High Scores");

        GroupLayout jPanel1Layout = new GroupLayout(getjPanel1());
        getjPanel1().setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(getjLabel3())
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(getjLabel3())
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getSongName().setFont(new java.awt.Font("Georgia", 1, 48)); // NOI18N
        getSongName().setForeground(java.awt.Color.white);
        getSongName().setText("Cringle Statistics");

        getjSeparator1().setForeground(new java.awt.Color(255, 255, 255));

        getjLabel1().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getjLabel1().setForeground(new java.awt.Color(255, 255, 255));
        getjLabel1().setText("Made by Lamar Cooley");

        getjPanel2().setBackground(new java.awt.Color(255, 255, 255));

        getjLabel5().setBackground(new java.awt.Color(153, 255, 153));
        getjLabel5().setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        getjLabel5().setForeground(new java.awt.Color(51, 51, 255));
        getjLabel5().setText("Song Information");

        getjSeparator2().setBackground(new java.awt.Color(0, 0, 0));

        getjLabel6().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getjLabel6().setForeground(new java.awt.Color(204, 0, 0));
        getjLabel6().setText("Radar Values");

        getFakes().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getFakes().setText("Fakes:");

        getHolds().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getHolds().setText("Holds:");

        getJumps().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getJumps().setText("Jumps:");

        getLifts().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getLifts().setForeground(new java.awt.Color(153, 153, 153));
        getLifts().setText("Lifts:");

        getRolls().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getRolls().setText("Rolls:");

        getHands().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getHands().setText("Hands:");

        getTaphold().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getTaphold().setText("TapHold:");

        getVoltage().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getVoltage().setForeground(new java.awt.Color(255, 204, 0));
        getVoltage().setText("Voltage:");

        getStream().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getStream().setForeground(new java.awt.Color(255, 0, 0));
        getStream().setText("Stream:");

        getFreeze().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getFreeze().setForeground(new java.awt.Color(0, 0, 204));
        getFreeze().setText("Freeze:");

        getAir().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getAir().setForeground(new java.awt.Color(102, 102, 102));
        getAir().setText("Air:");

        getChaos().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getChaos().setForeground(new java.awt.Color(102, 0, 204));
        getChaos().setText("Chaos:");

        getNotes().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getNotes().setForeground(new java.awt.Color(0, 204, 0));
        getNotes().setText("Notes:");

        getjLabel21().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getjLabel21().setForeground(new java.awt.Color(204, 0, 0));
        getjLabel21().setText("Tap Note Scores");

        getHitmine().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getHitmine().setText("Hit Mine:");

        getMiss().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getMiss().setText("Miss:");

        getFantastic().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getFantastic().setText("Fantastic:");

        getExcellent().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getExcellent().setText("Excellent:");

        getGreat().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getGreat().setText("Great:");

        getDecents().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getDecents().setText("Decent:");

        getWayoff().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getWayoff().setText("Way Off:");

        getCpHit().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getCpHit().setText("CP Hit:");

        getCpMiss().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getCpMiss().setText("CP Miss:");

        getAvoidmine().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getAvoidmine().setText("Avoid Mine:");

        getTitleP().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getTitleP().setText("Song Title:");

        getDifficulty().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getDifficulty().setText("Difficulty:");

        getTimesPlayed().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getTimesPlayed().setText("Times Played (Dif):");

        getTotalTimesPlayed().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getTotalTimesPlayed().setText("Total Times Played:");

        getjLabel7().setBackground(new java.awt.Color(153, 255, 153));
        getjLabel7().setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        getjLabel7().setForeground(new java.awt.Color(51, 51, 255));
        getjLabel7().setText("High Score Information");

        getjSeparator3().setBackground(new java.awt.Color(0, 0, 0));

        GroupLayout jPanel2Layout = new GroupLayout(getjPanel2());
        getjPanel2().setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                        .addComponent(getjSeparator2(), GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(getjLabel6()))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(getjLabel21()))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(getDifficulty())
                            .addComponent(getTitleP())
                            .addComponent(getTimesPlayed())
                            .addComponent(getTotalTimesPlayed())))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(getjLabel5()))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(getjLabel7())
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(getjSeparator3(), GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(getJumps())
                            .addComponent(getHolds())
                            .addComponent(getRolls())
                            .addComponent(getNotes()))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(getFakes())
                        .addGap(87, 87, 87))
                    .addGroup(GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addComponent(getCpMiss(), GroupLayout.Alignment.LEADING)
                            .addComponent(getCpHit(), GroupLayout.Alignment.LEADING)
                            .addComponent(getMiss(), GroupLayout.Alignment.LEADING)
                            .addComponent(getAvoidmine())
                            .addComponent(getHitmine(), GroupLayout.Alignment.LEADING))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(getGreat())
                                .addComponent(getExcellent())
                                .addComponent(getDecents())
                                .addComponent(getWayoff()))
                            .addComponent(getFantastic(), GroupLayout.Alignment.TRAILING))
                        .addGap(66, 66, 66))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(getFreeze())
                            .addComponent(getAir()))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(getTaphold())
                            .addComponent(getStream())
                            .addComponent(getChaos())
                            .addComponent(getLifts())
                            .addComponent(getHands()))
                        .addGap(65, 65, 65))
                    .addGroup(GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(getVoltage())
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(getjLabel5())
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getjSeparator2(), GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(getTitleP())
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getDifficulty())
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getTimesPlayed())
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getTotalTimesPlayed())
                .addGap(21, 21, 21)
                .addComponent(getjLabel7())
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getjSeparator3(), GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(getjLabel21())
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(getHitmine())
                    .addComponent(getFantastic()))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(getExcellent())
                    .addComponent(getAvoidmine()))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(getGreat())
                    .addComponent(getCpMiss()))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(getDecents())
                    .addComponent(getCpHit()))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(getWayoff())
                    .addComponent(getMiss()))
                .addGap(66, 66, 66)
                .addComponent(getjLabel6())
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(getFreeze())
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getAir())
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getVoltage())
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getNotes())
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getRolls()))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(getChaos())
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getTaphold())
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getLifts())
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getHands()))
                    .addComponent(getStream()))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(getHolds())
                    .addComponent(getFakes()))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getJumps())
                .addContainerGap())
        );

        getjPanel3().setBackground(new java.awt.Color(204, 0, 51));

        getjLabel4().setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        getjLabel4().setForeground(new java.awt.Color(255, 255, 255));
        getjLabel4().setText("Machine Statistics");

        GroupLayout jPanel3Layout = new GroupLayout(getjPanel3());
        getjPanel3().setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(getjLabel4())
                .addGap(21, 21, 21))
        );
        jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(getjLabel4())
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GroupLayout sidepaneLayout = new GroupLayout(getSidepane());
        getSidepane().setLayout(sidepaneLayout);
        sidepaneLayout.setHorizontalGroup(sidepaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(sidepaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(getSongName(), GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(sidepaneLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(sidepaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(sidepaneLayout.createSequentialGroup()
                        .addComponent(getjLabel1())
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(sidepaneLayout.createSequentialGroup()
                        .addComponent(getjSeparator1())
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(sidepaneLayout.createSequentialGroup()
                .addGroup(sidepaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(getjPanel1(), GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(getjPanel3(), GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(getjPanel2(), GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );
        sidepaneLayout.setVerticalGroup(sidepaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(sidepaneLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(getSongName())
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getjSeparator1(), GroupLayout.PREFERRED_SIZE, 4, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getjLabel1())
                .addGap(72, 72, 72)
                .addGroup(sidepaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(sidepaneLayout.createSequentialGroup()
                        .addComponent(getjPanel1(), GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(getjPanel3(), GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(getjPanel2(), GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        getBanner().setBackground(new java.awt.Color(255, 102, 102));

        getSearchField().setBackground(new java.awt.Color(255, 153, 153));
        getSearchField().setText("Search High Scores");
        getSearchField().setSelectionColor(new java.awt.Color(255, 102, 0));
        getSearchField().addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });

        getjLabel2().setIcon(new ImageIcon(getClass().getResource("/Search_18px.png"))); // NOI18N

        GroupLayout bannerLayout = new GroupLayout(getBanner());
        getBanner().setLayout(bannerLayout);
        bannerLayout.setHorizontalGroup(bannerLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, bannerLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(getjLabel2())
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getSearchField(), GroupLayout.PREFERRED_SIZE, 270, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        bannerLayout.setVerticalGroup(bannerLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, bannerLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(bannerLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(getSearchField())
                    .addComponent(getjLabel2(), GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getjTable1().setBackground(new java.awt.Color(255,204,204));
        getjTable1().setFont(getjTable1().getFont().deriveFont(getjTable1().getFont().getSize()+6f));
        getjTable1().setForeground(new java.awt.Color(16, 16, 16));
        getjTable1().setModel(new SongTableModel(getSongList()));
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(getjTable1().getModel());
        sorter.setComparator(8, Sort.getDateCompare());
        sorter.setComparator(6, Sort.getPercentCompare());
        sorter.setComparator(3, Sort.getLevelCompare());
        getjTable1().setRowSorter(sorter);
        getjTable1().setRowHeight(50);
        getjTable1().setGridColor(new java.awt.Color(255,204,204));
        getjScrollPane1().setViewportView(getjTable1());

        getjLabel9().setIcon(new ImageIcon(getClass().getResource("/logo.jpg"))); // NOI18N

        getjLabel8().setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        getjLabel8().setForeground(new java.awt.Color(255, 255, 255));
        getjLabel8().setText("Please let me know if you encounter any bugs! Color Scheme still in works!");

        getjLabel10().setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        getjLabel10().setForeground(new java.awt.Color(255, 255, 255));
        getjLabel10().setText("Welcome to Cringle Statistics! Things are still in the works! ");

        GroupLayout bgLayout = new GroupLayout(getBg());
        getBg().setLayout(bgLayout);
        bgLayout.setHorizontalGroup(bgLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addComponent(getSidepane(), GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGroup(bgLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(getBanner(), GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(getjScrollPane1())
                        .addContainerGap())
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(getjLabel9())
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bgLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(getjLabel10(), GroupLayout.PREFERRED_SIZE, 769, GroupLayout.PREFERRED_SIZE)
                            .addComponent(getjLabel8()))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        bgLayout.setVerticalGroup(bgLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(getSidepane(), GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(bgLayout.createSequentialGroup()
                .addComponent(getBanner(), GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGroup(bgLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(getjLabel9(), GroupLayout.PREFERRED_SIZE, 129, GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addGroup(GroupLayout.Alignment.TRAILING, bgLayout.createSequentialGroup()
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getjLabel10(), GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(getjLabel8(), GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)))
                .addComponent(getjScrollPane1()))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(getBg(), GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(getBg(), GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    public void createTable(List<String[]> songListo) {
        setSongList(songListo);
        initComponents();
        setVisible(true);
    }

    /**
     * @return the Air
     */
    public JLabel getAir() {
        return Air;
    }

    /**
     * @param Air the Air to set
     */
    public void setAir(JLabel Air) {
        this.Air = Air;
    }

    /**
     * @return the Notes
     */
    public JLabel getNotes() {
        return Notes;
    }

    /**
     * @param Notes the Notes to set
     */
    public void setNotes(JLabel Notes) {
        this.Notes = Notes;
    }

    /**
     * @return the songName
     */
    public JLabel getSongName() {
        return songName;
    }

    /**
     * @param songName the songName to set
     */
    public void setSongName(JLabel songName) {
        this.songName = songName;
    }

    /**
     * @return the avoidmine
     */
    public JLabel getAvoidmine() {
        return avoidmine;
    }

    /**
     * @param avoidmine the avoidmine to set
     */
    public void setAvoidmine(JLabel avoidmine) {
        this.avoidmine = avoidmine;
    }

    /**
     * @return the banner
     */
    public JPanel getBanner() {
        return banner;
    }

    /**
     * @param banner the banner to set
     */
    public void setBanner(JPanel banner) {
        this.banner = banner;
    }

    /**
     * @return the bg
     */
    public JPanel getBg() {
        return bg;
    }

    /**
     * @param bg the bg to set
     */
    public void setBg(JPanel bg) {
        this.bg = bg;
    }

    /**
     * @return the chaos
     */
    public JLabel getChaos() {
        return chaos;
    }

    /**
     * @param chaos the chaos to set
     */
    public void setChaos(JLabel chaos) {
        this.chaos = chaos;
    }

    /**
     * @return the cpHit
     */
    public JLabel getCpHit() {
        return cpHit;
    }

    /**
     * @param cpHit the cpHit to set
     */
    public void setCpHit(JLabel cpHit) {
        this.cpHit = cpHit;
    }

    /**
     * @return the cpMiss
     */
    public JLabel getCpMiss() {
        return cpMiss;
    }

    /**
     * @param cpMiss the cpMiss to set
     */
    public void setCpMiss(JLabel cpMiss) {
        this.cpMiss = cpMiss;
    }

    /**
     * @return the decents
     */
    public JLabel getDecents() {
        return decents;
    }

    /**
     * @param decents the decents to set
     */
    public void setDecents(JLabel decents) {
        this.decents = decents;
    }

    /**
     * @return the difficulty
     */
    public JLabel getDifficulty() {
        return difficulty;
    }

    /**
     * @param difficulty the difficulty to set
     */
    public void setDifficulty(JLabel difficulty) {
        this.difficulty = difficulty;
    }

    /**
     * @return the excellent
     */
    public JLabel getExcellent() {
        return excellent;
    }

    /**
     * @param excellent the excellent to set
     */
    public void setExcellent(JLabel excellent) {
        this.excellent = excellent;
    }

    /**
     * @return the fakes
     */
    public JLabel getFakes() {
        return fakes;
    }

    /**
     * @param fakes the fakes to set
     */
    public void setFakes(JLabel fakes) {
        this.fakes = fakes;
    }

    /**
     * @return the fantastic
     */
    public JLabel getFantastic() {
        return fantastic;
    }

    /**
     * @param fantastic the fantastic to set
     */
    public void setFantastic(JLabel fantastic) {
        this.fantastic = fantastic;
    }

    /**
     * @return the freeze
     */
    public JLabel getFreeze() {
        return freeze;
    }

    /**
     * @param freeze the freeze to set
     */
    public void setFreeze(JLabel freeze) {
        this.freeze = freeze;
    }

    /**
     * @return the great
     */
    public JLabel getGreat() {
        return great;
    }

    /**
     * @param great the great to set
     */
    public void setGreat(JLabel great) {
        this.great = great;
    }

    /**
     * @return the hands
     */
    public JLabel getHands() {
        return hands;
    }

    /**
     * @param hands the hands to set
     */
    public void setHands(JLabel hands) {
        this.hands = hands;
    }

    /**
     * @return the hitmine
     */
    public JLabel getHitmine() {
        return hitmine;
    }

    /**
     * @param hitmine the hitmine to set
     */
    public void setHitmine(JLabel hitmine) {
        this.hitmine = hitmine;
    }

    /**
     * @return the holds
     */
    public JLabel getHolds() {
        return holds;
    }

    /**
     * @param holds the holds to set
     */
    public void setHolds(JLabel holds) {
        this.holds = holds;
    }

    /**
     * @return the jLabel1
     */
    public JLabel getjLabel1() {
        return jLabel1;
    }

    /**
     * @param jLabel1 the jLabel1 to set
     */
    public void setjLabel1(JLabel jLabel1) {
        this.jLabel1 = jLabel1;
    }

    /**
     * @return the jLabel10
     */
    public JLabel getjLabel10() {
        return jLabel10;
    }

    /**
     * @param jLabel10 the jLabel10 to set
     */
    public void setjLabel10(JLabel jLabel10) {
        this.jLabel10 = jLabel10;
    }

    /**
     * @return the jLabel2
     */
    public JLabel getjLabel2() {
        return jLabel2;
    }

    /**
     * @param jLabel2 the jLabel2 to set
     */
    public void setjLabel2(JLabel jLabel2) {
        this.jLabel2 = jLabel2;
    }

    /**
     * @return the jLabel21
     */
    public JLabel getjLabel21() {
        return jLabel21;
    }

    /**
     * @param jLabel21 the jLabel21 to set
     */
    public void setjLabel21(JLabel jLabel21) {
        this.jLabel21 = jLabel21;
    }

    /**
     * @return the jLabel3
     */
    public JLabel getjLabel3() {
        return jLabel3;
    }

    /**
     * @param jLabel3 the jLabel3 to set
     */
    public void setjLabel3(JLabel jLabel3) {
        this.jLabel3 = jLabel3;
    }

    /**
     * @return the jLabel4
     */
    public JLabel getjLabel4() {
        return jLabel4;
    }

    /**
     * @param jLabel4 the jLabel4 to set
     */
    public void setjLabel4(JLabel jLabel4) {
        this.jLabel4 = jLabel4;
    }

    /**
     * @return the jLabel5
     */
    public JLabel getjLabel5() {
        return jLabel5;
    }

    /**
     * @param jLabel5 the jLabel5 to set
     */
    public void setjLabel5(JLabel jLabel5) {
        this.jLabel5 = jLabel5;
    }

    /**
     * @return the jLabel6
     */
    public JLabel getjLabel6() {
        return jLabel6;
    }

    /**
     * @param jLabel6 the jLabel6 to set
     */
    public void setjLabel6(JLabel jLabel6) {
        this.jLabel6 = jLabel6;
    }

    /**
     * @return the jLabel7
     */
    public JLabel getjLabel7() {
        return jLabel7;
    }

    /**
     * @param jLabel7 the jLabel7 to set
     */
    public void setjLabel7(JLabel jLabel7) {
        this.jLabel7 = jLabel7;
    }

    /**
     * @return the jLabel8
     */
    public JLabel getjLabel8() {
        return jLabel8;
    }

    /**
     * @param jLabel8 the jLabel8 to set
     */
    public void setjLabel8(JLabel jLabel8) {
        this.jLabel8 = jLabel8;
    }

    /**
     * @return the jLabel9
     */
    public JLabel getjLabel9() {
        return jLabel9;
    }

    /**
     * @param jLabel9 the jLabel9 to set
     */
    public void setjLabel9(JLabel jLabel9) {
        this.jLabel9 = jLabel9;
    }

    /**
     * @return the jPanel1
     */
    public JPanel getjPanel1() {
        return jPanel1;
    }

    /**
     * @param jPanel1 the jPanel1 to set
     */
    public void setjPanel1(JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    /**
     * @return the jPanel2
     */
    public JPanel getjPanel2() {
        return jPanel2;
    }

    /**
     * @param jPanel2 the jPanel2 to set
     */
    public void setjPanel2(JPanel jPanel2) {
        this.jPanel2 = jPanel2;
    }

    /**
     * @return the jPanel3
     */
    public JPanel getjPanel3() {
        return jPanel3;
    }

    /**
     * @param jPanel3 the jPanel3 to set
     */
    public void setjPanel3(JPanel jPanel3) {
        this.jPanel3 = jPanel3;
    }

    /**
     * @return the jPanel4
     */
    public JPanel getjPanel4() {
        return jPanel4;
    }

    /**
     * @param jPanel4 the jPanel4 to set
     */
    public void setjPanel4(JPanel jPanel4) {
        this.jPanel4 = jPanel4;
    }

    /**
     * @return the jScrollPane1
     */
    public JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    /**
     * @param jScrollPane1 the jScrollPane1 to set
     */
    public void setjScrollPane1(JScrollPane jScrollPane1) {
        this.jScrollPane1 = jScrollPane1;
    }

    /**
     * @return the jSeparator1
     */
    public JSeparator getjSeparator1() {
        return jSeparator1;
    }

    /**
     * @param jSeparator1 the jSeparator1 to set
     */
    public void setjSeparator1(JSeparator jSeparator1) {
        this.jSeparator1 = jSeparator1;
    }

    /**
     * @return the jSeparator2
     */
    public JSeparator getjSeparator2() {
        return jSeparator2;
    }

    /**
     * @param jSeparator2 the jSeparator2 to set
     */
    public void setjSeparator2(JSeparator jSeparator2) {
        this.jSeparator2 = jSeparator2;
    }

    /**
     * @return the jSeparator3
     */
    public JSeparator getjSeparator3() {
        return jSeparator3;
    }

    /**
     * @param jSeparator3 the jSeparator3 to set
     */
    public void setjSeparator3(JSeparator jSeparator3) {
        this.jSeparator3 = jSeparator3;
    }

    /**
     * @return the jTable1
     */
    public JTable getjTable1() {
        return jTable1;
    }

    /**
     * @param jTable1 the jTable1 to set
     */
    public void setjTable1(JTable jTable1) {
        this.jTable1 = jTable1;
    }

    /**
     * @return the jumps
     */
    public JLabel getJumps() {
        return jumps;
    }

    /**
     * @param jumps the jumps to set
     */
    public void setJumps(JLabel jumps) {
        this.jumps = jumps;
    }

    /**
     * @return the lifts
     */
    public JLabel getLifts() {
        return lifts;
    }

    /**
     * @param lifts the lifts to set
     */
    public void setLifts(JLabel lifts) {
        this.lifts = lifts;
    }

    /**
     * @return the miss
     */
    public JLabel getMiss() {
        return miss;
    }

    /**
     * @param miss the miss to set
     */
    public void setMiss(JLabel miss) {
        this.miss = miss;
    }

    /**
     * @return the rolls
     */
    public JLabel getRolls() {
        return rolls;
    }

    /**
     * @param rolls the rolls to set
     */
    public void setRolls(JLabel rolls) {
        this.rolls = rolls;
    }

    /**
     * @return the searchField
     */
    public JTextField getSearchField() {
        return searchField;
    }

    /**
     * @param searchField the searchField to set
     */
    public void setSearchField(JTextField searchField) {
        this.searchField = searchField;
    }

    /**
     * @return the sidepane
     */
    public JPanel getSidepane() {
        return sidepane;
    }

    /**
     * @param sidepane the sidepane to set
     */
    public void setSidepane(JPanel sidepane) {
        this.sidepane = sidepane;
    }

    /**
     * @return the stream
     */
    public JLabel getStream() {
        return stream;
    }

    /**
     * @param stream the stream to set
     */
    public void setStream(JLabel stream) {
        this.stream = stream;
    }

    /**
     * @return the taphold
     */
    public JLabel getTaphold() {
        return taphold;
    }

    /**
     * @param taphold the taphold to set
     */
    public void setTaphold(JLabel taphold) {
        this.taphold = taphold;
    }

    /**
     * @return the timesPlayed
     */
    public JLabel getTimesPlayed() {
        return timesPlayed;
    }

    /**
     * @param timesPlayed the timesPlayed to set
     */
    public void setTimesPlayed(JLabel timesPlayed) {
        this.timesPlayed = timesPlayed;
    }

    /**
     * @return the titleP
     */
    public JLabel getTitleP() {
        return titleP;
    }

    /**
     * @param titleP the titleP to set
     */
    public void setTitleP(JLabel titleP) {
        this.titleP = titleP;
    }

    /**
     * @return the totalTimesPlayed
     */
    public JLabel getTotalTimesPlayed() {
        return totalTimesPlayed;
    }

    /**
     * @param totalTimesPlayed the totalTimesPlayed to set
     */
    public void setTotalTimesPlayed(JLabel totalTimesPlayed) {
        this.totalTimesPlayed = totalTimesPlayed;
    }

    /**
     * @return the voltage
     */
    public JLabel getVoltage() {
        return voltage;
    }

    /**
     * @param voltage the voltage to set
     */
    public void setVoltage(JLabel voltage) {
        this.voltage = voltage;
    }

    /**
     * @return the wayoff
     */
    public JLabel getWayoff() {
        return wayoff;
    }

    /**
     * @param wayoff the wayoff to set
     */
    public void setWayoff(JLabel wayoff) {
        this.wayoff = wayoff;
    }

    /**
     * @return the songList
     */
    public List<String[]> getSongList() {
        return songList;
    }

    /**
     * @param songList the songList to set
     */
    public void setSongList(List<String[]> songList) {
        this.songList = songList;
    }
}
